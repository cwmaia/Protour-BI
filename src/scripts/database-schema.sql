-- Locavia BI Database Schema
-- Optimized for Business Intelligence workloads

CREATE DATABASE IF NOT EXISTS locavia_bi
CHARACTER SET utf8mb4
COLLATE utf8mb4_unicode_ci;

USE locavia_bi;

-- Sync metadata table
CREATE TABLE IF NOT EXISTS sync_metadata (
    id INT AUTO_INCREMENT PRIMARY KEY,
    entity_name VARCHAR(100) NOT NULL,
    last_sync_at TIMESTAMP NULL,
    sync_status ENUM('pending', 'running', 'completed', 'failed') DEFAULT 'pending',
    records_synced INT DEFAULT 0,
    error_message TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_entity_status (entity_name, sync_status),
    INDEX idx_last_sync (last_sync_at)
) ENGINE=InnoDB;

-- Clients table (optimized for BI)
CREATE TABLE IF NOT EXISTS bi_clientes (
    codigo_cliente INT PRIMARY KEY,
    codigo_empresa INT NOT NULL,
    codigo_unidade INT NOT NULL,
    codigo_motivo_bloqueio INT NULL,
    codigo_origem_cliente INT NULL,
    tipo_cliente VARCHAR(10),
    razao_social VARCHAR(255) NOT NULL,
    nome_fantasia VARCHAR(255),
    cnpj_cpf VARCHAR(20),
    cpf VARCHAR(14),
    cnpj VARCHAR(18),
    logradouro VARCHAR(255),
    bairro VARCHAR(100),
    cidade VARCHAR(100),
    uf CHAR(2),
    codigo_pais INT,
    telefone VARCHAR(20),
    celular VARCHAR(20),
    email VARCHAR(255),
    situacao VARCHAR(20),
    inserido_por INT,
    inserido_em DATETIME,
    modificado_por INT,
    modificado_em DATETIME,
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_empresa_unidade (codigo_empresa, codigo_unidade),
    INDEX idx_cnpj_cpf (cnpj_cpf),
    INDEX idx_tipo_cliente (tipo_cliente),
    INDEX idx_situacao (situacao),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- Vehicles table (optimized for BI)
CREATE TABLE IF NOT EXISTS bi_veiculos (
    codigo_mva VARCHAR(50) PRIMARY KEY,
    placa VARCHAR(10) NOT NULL,
    codigo_empresa INT NOT NULL,
    codigo_unidade INT NOT NULL,
    cor VARCHAR(50),
    chassi VARCHAR(50),
    ano INT,
    tipo_combustivel VARCHAR(50),
    codigo_modelo INT,
    descricao_modelo VARCHAR(255),
    codigo_marca INT,
    descricao_marca VARCHAR(100),
    codigo_grupo INT,
    descricao_grupo VARCHAR(100),
    passageiros INT,
    portas INT,
    data_compra DATE,
    nf_compra BIGINT,
    local_compra VARCHAR(255),
    valor_veiculo DECIMAL(15,2),
    valor_compra DECIMAL(15,2),
    valor_fipe DECIMAL(15,2),
    codigo_unidade_compra INT,
    odometro_atual INT,
    status VARCHAR(50),
    descricao_status VARCHAR(100),
    codigo_cliente INT,
    razao_social VARCHAR(255),
    renavam VARCHAR(50),
    categoria INT,
    inserido_em DATETIME,
    modificado_em DATETIME,
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_placa (placa),
    INDEX idx_empresa_unidade (codigo_empresa, codigo_unidade),
    INDEX idx_status (status),
    INDEX idx_marca_modelo (codigo_marca, codigo_modelo),
    INDEX idx_grupo (codigo_grupo),
    INDEX idx_cliente (codigo_cliente),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- Drivers table
CREATE TABLE IF NOT EXISTS bi_condutores (
    codigo_condutor INT PRIMARY KEY,
    codigo_cliente INT NOT NULL,
    nome_condutor VARCHAR(255) NOT NULL,
    cpf VARCHAR(14),
    numero_cnh VARCHAR(50),
    categoria_habilitacao VARCHAR(10),
    data_validade DATE,
    data_primeira_habilitacao DATE,
    orgao_emissor_habilitacao VARCHAR(50),
    telefone VARCHAR(20),
    celular VARCHAR(20),
    email VARCHAR(255),
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_cliente (codigo_cliente),
    INDEX idx_cpf (cpf),
    INDEX idx_cnh (numero_cnh),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- Contracts table
CREATE TABLE IF NOT EXISTS bi_contratos (
    codigo_contrato INT PRIMARY KEY,
    codigo_empresa INT NOT NULL,
    codigo_unidade INT NOT NULL,
    codigo_grupo_contratos INT,
    codigo_mva VARCHAR(50),
    codigo_cliente INT,
    razao_social VARCHAR(255),
    tipo_tarifa VARCHAR(50),
    periodo_tarifa INT,
    valor_km_rodado DECIMAL(10,2),
    franquia_km_rodado INT,
    valor_locacao DECIMAL(15,2),
    data_hora_inicio_real DATETIME,
    data_hora_termino_real DATETIME,
    data_fechamento_contrato DATE,
    usuario_abertura_contrato INT,
    codigo_condutor INT,
    email VARCHAR(255),
    celular VARCHAR(20),
    fechado CHAR(1),
    inserido_por INT,
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_empresa_unidade (codigo_empresa, codigo_unidade),
    INDEX idx_cliente (codigo_cliente),
    INDEX idx_grupo_contratos (codigo_grupo_contratos),
    INDEX idx_mva (codigo_mva),
    INDEX idx_data_inicio (data_hora_inicio_real),
    INDEX idx_data_termino (data_hora_termino_real),
    INDEX idx_fechado (fechado),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- BI specific vehicle data table
CREATE TABLE IF NOT EXISTS bi_dados_veiculos (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    placa VARCHAR(10) NOT NULL,
    codigo_mva INT,
    chassi VARCHAR(50),
    renavam VARCHAR(50),
    codigo_empresa INT,
    codigo_unidade INT,
    descricao_unidade VARCHAR(255),
    codigo_marca INT,
    marca_veiculo VARCHAR(100),
    modelo VARCHAR(255),
    ano_modelo INT,
    letra VARCHAR(10),
    descricao_grupo VARCHAR(100),
    valor_compra DECIMAL(15,2),
    status VARCHAR(50),
    data_compra DATE,
    nf_compra VARCHAR(50),
    valor_entrada DECIMAL(15,2),
    data_venda DATE,
    valor_venda DECIMAL(15,2),
    dias_em_posse INT,
    codigo_fipe VARCHAR(50),
    valor_fipe DECIMAL(15,2),
    numero_contrato_alienacao VARCHAR(100),
    inicio_financiamento DATE,
    valor_compra_veiculo DECIMAL(15,2),
    valor_total_compra_veiculo DECIMAL(15,2),
    valor_alienado DECIMAL(15,2),
    valor_media_parcela_alienacao DECIMAL(15,2),
    valor_total_alienacao_quitado DECIMAL(15,2),
    valor_total_alienacao_aberto DECIMAL(15,2),
    numero_parcelas_total INT,
    quantidade_parcelas_quitadas INT,
    quantidade_parcelas_abertas INT,
    valor_media_parcela_do_veiculo DECIMAL(15,2),
    financiado_por VARCHAR(255),
    primeiro_vencimento DATE,
    ultimo_vencimento DATE,
    situacao_contrato_alienacao VARCHAR(50),
    razao_social VARCHAR(255),
    nome_fantasia VARCHAR(255),
    veiculo_substituido VARCHAR(10),
    contrato_master INT,
    data_inicio_contrato DATE,
    data_termino_contrato DATE,
    periodo_locacao_master VARCHAR(50),
    ultimo_contrato VARCHAR(50),
    periodo_locacao_veiculo VARCHAR(50),
    total_recebido DECIMAL(15,2),
    parcelas_recebidas INT,
    total_a_receber DECIMAL(15,2),
    parcelas_a_receber INT,
    valor_tarifa_locacao_atual DECIMAL(15,2),
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_placa_sync (placa, sync_date),
    INDEX idx_empresa_unidade (codigo_empresa, codigo_unidade),
    INDEX idx_status (status),
    INDEX idx_contrato_master (contrato_master),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- BI specific client data table
CREATE TABLE IF NOT EXISTS bi_dados_clientes (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    razao_social VARCHAR(255) NOT NULL,
    descricao_unidade VARCHAR(255),
    numero_documento VARCHAR(100),
    data_emissao DATE,
    descricao_tipo_documento VARCHAR(100),
    valor_bruto DECIMAL(15,2),
    valor_documento DECIMAL(15,2),
    data_vencimento DATE,
    nome_fantasia VARCHAR(255),
    area_atuacao VARCHAR(255),
    previsao VARCHAR(50),
    valor_centro_receita DECIMAL(15,2),
    descricao_centro_receita VARCHAR(255),
    codigo_forma_pagamento INT,
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_razao_social (razao_social),
    INDEX idx_documento (numero_documento),
    INDEX idx_data_emissao (data_emissao),
    INDEX idx_data_vencimento (data_vencimento),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- Reservations table
CREATE TABLE IF NOT EXISTS bi_reservas (
    codigo_reserva INT PRIMARY KEY,
    codigo_empresa INT NOT NULL,
    codigo_unidade INT NOT NULL,
    codigo_cliente INT,
    codigo_grupo_veiculos INT,
    codigo_mva INT,
    codigo_protecao INT,
    codigo_tarifa_veiculo INT,
    data_hora_inicio DATETIME,
    data_hora_termino DATETIME,
    codigo_local_retirada INT,
    local_entrega_codigo_municipio INT,
    local_devolucao_codigo_municipio INT,
    origem VARCHAR(50),
    cpf VARCHAR(14),
    cnpj VARCHAR(18),
    observacao_reserva TEXT,
    cancelada CHAR(1),
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_empresa_unidade (codigo_empresa, codigo_unidade),
    INDEX idx_cliente (codigo_cliente),
    INDEX idx_data_inicio_termino (data_hora_inicio, data_hora_termino),
    INDEX idx_cancelada (cancelada),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- Payment methods table
CREATE TABLE IF NOT EXISTS bi_formas_pagamento (
    codigo_forma_pagamento INT PRIMARY KEY,
    descricao VARCHAR(255) NOT NULL,
    lanca_recebimentos CHAR(1),
    codigo_empresa INT,
    cheque CHAR(1),
    cartao CHAR(1),
    permuta CHAR(1),
    boleto CHAR(1),
    avista CHAR(1),
    financiado CHAR(1),
    veiculo_troca CHAR(1),
    pix CHAR(1),
    transferencia CHAR(1),
    inserido_por INT,
    inserido_em DATETIME,
    modificado_por INT,
    modificado_em DATETIME,
    sync_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_empresa (codigo_empresa),
    INDEX idx_sync_date (sync_date)
) ENGINE=InnoDB;

-- Create audit log table
CREATE TABLE IF NOT EXISTS sync_audit_log (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    entity_name VARCHAR(100) NOT NULL,
    operation VARCHAR(50) NOT NULL,
    record_count INT DEFAULT 0,
    status VARCHAR(50) NOT NULL,
    error_message TEXT NULL,
    started_at TIMESTAMP NOT NULL,
    completed_at TIMESTAMP NULL,
    duration_seconds INT GENERATED ALWAYS AS (TIMESTAMPDIFF(SECOND, started_at, completed_at)) STORED,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_entity_operation (entity_name, operation),
    INDEX idx_status (status),
    INDEX idx_started_at (started_at)
) ENGINE=InnoDB;